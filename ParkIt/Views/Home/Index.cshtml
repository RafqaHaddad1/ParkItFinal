
@{
    ViewData["Title"] = "Home Page";
}
<style>
    .container {
        display: flex;
        flex-direction: column;
        align-items: center;
        padding: 20px;
    }

    .card-body {
        overflow: hidden; /* Hide any overflow */
    }

    #DashboardTable {
        width: 100% !important; /* Make sure the table takes the full width of its container */
    }

    #toggleButton {

        color: black; /* Button text color */
        border: none; /* Remove button border */
        background-color: transparent;
        cursor: pointer;
        border-radius: 5px; /* Add rounded corners */
        float: right;
    }

    #toggleButton2 {
        color: black; /* Button text color */
        border: none; /* Remove button border */
        margin-left: 10px;
        background-color: transparent;
        cursor: pointer;
        border-radius: 5px; /* Add rounded corners */
        
    }

    #toggleButton2.arrow.down::before {
        content: "▼"; /* Add an arrow down icon using CSS */
    }

    #toggleButton2.arrow.up::before {
        content: "▲"; /* Add an arrow up icon using CSS */
    }
        #toggleButton.arrow.down::before {
            content: "▼"; /* Add an arrow down icon using CSS */
        }

        #toggleButton.arrow.up::before {
            content: "▲"; /* Add an arrow up icon using CSS */
        }

    .dataTables_wrapper .dataTables_length {
        float: left;
        margin: 5px;
    }

    div.dataTables_wrapper {
        position: relative;
        margin: 10px;
    }
 
</style>
<head>

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
 
    <link rel="stylesheet" href="~/css/site.css">
    <!-- DataTables CSS and JS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/2.1.6/css/dataTables.dataTables.css" />

    <script src="https://cdn.datatables.net/2.1.6/js/dataTables.js"></script>
</head>
<h1 id="Username"></h1>
<br />
<section class="content">
    <div class="container-fluid">
        <!-- Small boxes (Stat box) -->
        <div class="row">
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-info">
                    <div class="inner">
                        <h3 id="ActiveZone"></h3>
                        <p>Active Zones</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-bag"></i>
                    </div>
                    <a href="@Url.Action("CoveredZones", "Zone")" " class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-success">
                    <div class="inner">
                        <h3 id="ActiveRunners"></h3>
                        <p>Active Runners</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-stats-bars"></i>
                    </div>
                    <a href="@Url.Action("Users", "User")" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-warning">
                    <div class="inner">
                        <h3 id="ActiveCars"></h3>
                        <p>Cars in hand</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-person-add"></i>
                    </div>
                    <a href="@Url.Action("TransactionTable", "Transaction")" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
            <div class="col-lg-3 col-6">
                <!-- small box -->
                <div class="small-box bg-danger">
                    <div class="inner">
                        <h3 id="TotalIncome"></h3>
                        <p>Total Income</p>
                    </div>
                    <div class="icon">
                        <i class="ion ion-pie-graph"></i>
                    </div>
                    <a href="#" class="small-box-footer">More info <i class="fas fa-arrow-circle-right"></i></a>
                </div>
            </div>
            <!-- ./col -->
        </div>

        <div class="row">
            <section class="col-8 connectedSortable">
                <!-- Transactions Overview -->
                <div class="card">
                    @* <div class="card-header">
                        <h3 class="card-title">Transactions Overview</h3>
                        <button id="toggleButton2" class="arrow down"></button>
                        <div class="card-tools">
                            <input type="text" id="searchInput" class="form-control" placeholder="Search...">
                        </div>
                    </div> *@
                    <div class="card-body table-responsive p-0">
                        <table id="DashboardTable" class="table table-hover table-striped table-bordered">
                            <thead>
                                <tr>
                                    <th>Zone</th>
                                    <th>Runner</th>
                                    <th>Active</th>
                                    <th>Status</th>
                                    <th>Time</th>
                                </tr>
                            </thead>
                            <tbody>
              
                            </tbody>
                        </table>
                        
                    </div>
                </div>
            </section>
            <!-- /.Left col -->
            <!-- right col -->
            <section class="col-4 connectedSortable">
                <!-- Zones Ranking -->
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">
                            Zones Ranking</h3>
                        <button id="toggleButton" class="arrow down"></button>
                    </div>
                    <div class="card-body">
                        <ul class="list-group">
                        </ul>
                    </div>
                    <button id="addMoreButton" class="btn-primary">Load More</button>
                </div>
            </section>
            <!-- right col -->
        </div>
        <!-- /.row (main row) -->
    </div>
</section>

<script type="text/javascript">
 const token = localStorage.getItem('jwtToken'); 
    $(document).ready(function () {
       
        $.ajax({
            url: '/Home/Index',
            type: 'GET',
             headers: {
                'Authorization': `Bearer ${token}`,
             },
            success: function (response) {
                if (response.success) {
                    // Update the HTML elements with the data
                    $('#ActiveZone').text(response.activeZoneCount);
                    $('#ActiveRunners').text(response.activeRunners);
                    $('#ActiveCars').text(response.numberOfCars);
                    $('#TotalIncome').text(response.totalIncome + " $");
                    $('#Username').text("Hello " + response.username);

                    // Log Zone Rankings
                    console.log('Zone Rankings:', response.zoneRanking);

                    //Fill zone ranking list
                    var listGroup = $('.list-group');
                    listGroup.empty();

                    // Determine the maximum number of items to display initially
                    const itemsPerPage = 7;
                    let currentPage = 1;

                    // Function to display the current page of items
                    function displayZones() {
                        const startIndex = (currentPage - 1) * itemsPerPage;
                        const endIndex = startIndex + itemsPerPage;

                        const zonesToDisplay = response.zoneRanking.slice(startIndex, endIndex);

                        $.each(zonesToDisplay, function (index, ranking) {
                            var listItem = `
                            <li class="list-group-item">
                                ${ranking.zoneName}
                                <span class="float-right">${ranking.transactionCount}</span>
                            </li>`;
                            listGroup.append(listItem);
                        });

                        // Check if there are more items to display
                        if (endIndex >= response.zoneRanking.length) {
                            // No more items, disable or hide the "Add More" button
                            $('#addMoreButton').hide();
                        } else {
                            // More items to display, show the "Add More" button
                            $('#addMoreButton').show();
                        }
                    }

                    // Display the initial page of items
                    displayZones();

                    // Add an event listener to the "Add More" button
                    $('#addMoreButton').click(function () {
                        currentPage++;
                        displayZones();
                    });


                    // Log and update the dashboard table
                    console.log('Dashboard Table:', response.alltransactions);
                    var tableBody = $('#DashboardTable tbody');
                    tableBody.empty();  // Clear the table body

                    // Assuming 'response.alltransactions' is an array of items
                    $.each(response.alltransactions, function (index, item) {
                        var row = `
                        <tr>
                            <td>${item.zoneName}</td>
                            <td>${item.name}</td>
                            <td>${item.active}</td>
                            <td>${item.status}</td>
                            <td>${item.carArrivedAt}</td>
                        </tr>`;
                        tableBody.append(row);
                    });
                    $('#DashboardTable').DataTable({})

                } else {
                    alert("Failed to fetch dashboard data.");
                }
            },
            error: function (xhr, status, error) {
                console.error("Error: " + error);
            }
        });

        // Hide the default search input box
        $('.dataTables_filter').hide();

        // Bind the search input to the DataTable search
        $('#searchInput').on('keyup', function () {
            table.search(this.value).draw();
        });
        $('#toggleButton').click(function () {
            $('.list-group').toggle(); // Toggles the visibility of the list

            // Change the button text based on the list visibility
            var isVisible = $('.list-group').is(':visible');
          
        });
        $('#toggleButton2').click(function () {
            $('#DashboardTable').toggle(); // Toggles the visibility of the list

            // Change the button text based on the list visibility
            var isVisible = $('.list-group').is(':visible');

        });
    });
    </script>
